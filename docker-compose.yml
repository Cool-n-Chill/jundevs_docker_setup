version: '3'

services:
  nginx:
    image: nginx:stable-alpine
    volumes:
      - ./_docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./backend/:/var/www
    ports: 
      - "80:80"
    depends_on:
      - backend
      - frontend
    container_name: jundevs_nginx
    networks:
      - app-network

  backend:
    build: 
      context: ./backend
      dockerfile: _docker/app/Dockerfile
    volumes:
      - ./backend/:/var/www/
    depends_on:
      - db
    user: "1000:1000"
    container_name: jundevs_backend
    networks:
      - app-network

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    working_dir: /home/node/app
    volumes:
    - ./frontend:/home/node/app
    environment:
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: true
    tty: true
    stdin_open: true
    ports:
      - "3000:3000"
    container_name: jundevs_frontend
    networks:
      - app-network

  db:
    image: postgres:15.2
    restart: always
    volumes:
      - ./backend/tmp/db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: jundevs
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8'
    ports:
      - "5432:5432"
    container_name: jundevs_db
    networks:
      - app-network

  adminer:
    image: adminer:4
    restart: always
    ports:
      - 8080:8080
    container_name: jundevs_db_adminer
    networks:
      - app-network

networks:
  app-network:
    driver: bridge